"""Enhance labels with modern features

Revision ID: f1a2b3c4d5e6
Revises: e8f9a2b3c4d5
Create Date: 2025-01-27 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1a2b3c4d5e6'
down_revision = 'e8f9a2b3c4d5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to labels table
    op.add_column('labels', sa.Column('label_type', sa.String(length=20), nullable=True, default='custom'))
    op.add_column('labels', sa.Column('category', sa.String(length=50), nullable=True))
    op.add_column('labels', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.add_column('labels', sa.Column('icon', sa.String(length=50), nullable=True))
    op.add_column('labels', sa.Column('auto_apply_rules', sa.JSON(), nullable=True))
    op.add_column('labels', sa.Column('priority', sa.Integer(), nullable=True, default=0))
    op.add_column('labels', sa.Column('usage_count', sa.Integer(), nullable=True, default=0))
    op.add_column('labels', sa.Column('last_used', sa.DateTime(), nullable=True))
    op.add_column('labels', sa.Column('is_active', sa.Boolean(), nullable=True, default=True))
    op.add_column('labels', sa.Column('is_system', sa.Boolean(), nullable=True, default=False))
    op.add_column('labels', sa.Column('created_by', sa.Integer(), nullable=True))
    
    # Create indexes for new columns
    op.create_index(op.f('ix_labels_label_type'), 'labels', ['label_type'], unique=False)
    op.create_index(op.f('ix_labels_category'), 'labels', ['category'], unique=False)
    
    # Add foreign key constraints
    op.create_foreign_key('fk_labels_parent_id', 'labels', 'labels', ['parent_id'], ['id'])
    op.create_foreign_key('fk_labels_created_by', 'labels', 'users', ['created_by'], ['id'])
    
    # Create label_templates table
    op.create_table('label_templates',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('category', sa.String(length=50), nullable=True),
        sa.Column('labels', sa.JSON(), nullable=False),
        sa.Column('is_default', sa.Boolean(), nullable=True, default=False),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.Column('usage_count', sa.Integer(), nullable=True, default=0),
        sa.Column('last_used', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_label_templates_id'), 'label_templates', ['id'], unique=False)
    op.create_index(op.f('ix_label_templates_category'), 'label_templates', ['category'], unique=False)
    op.create_foreign_key('fk_label_templates_created_by', 'label_templates', 'users', ['created_by'], ['id'])
    
    # Create smart_label_rules table
    op.create_table('smart_label_rules',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('conditions', sa.JSON(), nullable=False),
        sa.Column('label_id', sa.Integer(), nullable=False),
        sa.Column('priority', sa.Integer(), nullable=True, default=0),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.Column('auto_apply', sa.Boolean(), nullable=True, default=True),
        sa.Column('remove_on_false', sa.Boolean(), nullable=True, default=False),
        sa.Column('match_count', sa.Integer(), nullable=True, default=0),
        sa.Column('last_matched', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_smart_label_rules_id'), 'smart_label_rules', ['id'], unique=False)
    op.create_foreign_key('fk_smart_label_rules_label_id', 'smart_label_rules', 'labels', ['label_id'], ['id'])
    op.create_foreign_key('fk_smart_label_rules_created_by', 'smart_label_rules', 'users', ['created_by'], ['id'])
    
    # Update existing labels to have default values
    op.execute("UPDATE labels SET label_type = 'custom', priority = 0, usage_count = 0, is_active = true, is_system = false WHERE label_type IS NULL")
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign key constraints
    op.drop_constraint('fk_smart_label_rules_created_by', 'smart_label_rules', type_='foreignkey')
    op.drop_constraint('fk_smart_label_rules_label_id', 'smart_label_rules', type_='foreignkey')
    op.drop_constraint('fk_label_templates_created_by', 'label_templates', type_='foreignkey')
    op.drop_constraint('fk_labels_created_by', 'labels', type_='foreignkey')
    op.drop_constraint('fk_labels_parent_id', 'labels', type_='foreignkey')
    
    # Drop indexes
    op.drop_index(op.f('ix_smart_label_rules_id'), table_name='smart_label_rules')
    op.drop_index(op.f('ix_label_templates_category'), table_name='label_templates')
    op.drop_index(op.f('ix_label_templates_id'), table_name='label_templates')
    op.drop_index(op.f('ix_labels_category'), table_name='labels')
    op.drop_index(op.f('ix_labels_label_type'), table_name='labels')
    
    # Drop tables
    op.drop_table('smart_label_rules')
    op.drop_table('label_templates')
    
    # Drop columns from labels table
    op.drop_column('labels', 'created_by')
    op.drop_column('labels', 'is_system')
    op.drop_column('labels', 'is_active')
    op.drop_column('labels', 'last_used')
    op.drop_column('labels', 'usage_count')
    op.drop_column('labels', 'priority')
    op.drop_column('labels', 'auto_apply_rules')
    op.drop_column('labels', 'icon')
    op.drop_column('labels', 'parent_id')
    op.drop_column('labels', 'category')
    op.drop_column('labels', 'label_type')
    
    # ### end Alembic commands ###
